Git commands
- Remove last commit but keep changes: `git reset HEAD~1`
- Checkout to remote branch: `git fetch` then `git switch <branch>`

Ideas
- Boost
	- Player has a boost meter.
	- Player can use boost to hit other players.
	- Player can hit/collect things to get more boost.
	- When a player collects boost, players in higher positions get less.
- Player can hit/collect a certain amount of things to unlock a shortcut only they can use.
- Status affects
	- Fire: top speed and acceleration are lowered.
	- Shock: steering disabled.
	- Ice: car essentially becomes a block of ice. Steering and engine are disabled, friction is greatly reduced.
- Cube which can withstand a couple hits then explode into fire and shock status effects. The ground is covered with the status effect where the cube exploded and it remains for the rest of the level. (Intead of cubes, do I want to use barrels?)
	- Could have cubes which do not explode and barrels which do.
- Status effect entities
	- Shock
		- Non exploding rigid body cubes - touch it and your car loses steering
		- Exploding rigid body barrels - leave behind a cloud of shockiness
	- Fire
		- Non exploding rigid body cubes - touch it and your car lights on fire
		- Exploding rigid body barrels full of oil - leaves behind an oil slick on fire
			- This would be hard to do technically, perhaps we could settle for archored barrels which are not rigid body enabled
	- Ice
		- Non exploding rigid body cubes - touch it and your car turns into an ice block
		- Exploding rigid body barrels full of dry ice - leaves behind a cloud of dry ice
	- I think any rigid body should be able to be shocked/caught on fire/frozen. The status effect only needs to happen for a second or two. It would just add another layer of cool sandboxyness.
- Side/cylinder bumpers which fire off when the player gets close.
- Giant fans which can blow your car sideways or up.
- Hitting a normal rigid body slows down the player.
- Surface types: friction is changed.
	- Concrete/asphalt, mud, ice, oil slicks.
- Boost pad/jet
	- Gives a bigger boost than using boost meter would give.
	- All rigid bodies can be accelerated by this.
- Oil drum that breaks into an oil slick.
- Short cut which opens up once the player has collected a key.
- Moving conveyor belts that can carry things

Track ideas
- A track where you're driving back and forth on the same road and having to avoid head on collisions.

A note about the car wheel positioning. When the car is in the air such that the suspension is not colliding with the ground, we max out the spring length to the same value as the maximum spring ray length. For the position of the wheel,
we could pick a different maximum length. It's intentionally designed such that the ray length is pretty long to provide better stability so we'll probably want to use a different max length for the visual position of the wheel.

Improvements
- Instead of exporting multiple ground collision meshes, then loading in and inserting each one into the ground grid. Why don't we have the exporter do the work of combining the collision meshes into one big array of indices and positions.
- Cylinder top and bottom faces can generate more than four contacts. This means we could implement manifold reduction. I did some investigation and it looks like it's not generating more than 5 contacts even though it could theoretically generate 8.

Todo
- Exploding barrels
	- Explosion particle effect
	- Rigid bodies should be affected by the cloud or on fire oil slicks
	- Consider having little rigid bodies ignored from more things like the car suspension
	- I think the thin rectangular shrapnel piece is too thin, seems like it's falling through the ground plane from high up. Should increase that hull size if that is happening. Need to look into the fence bounds too.
	- Fire barrel shrapnel pieces
- Cylinder bumper
	- Should we use a collision resolution constraint with restitution? Should we use a constraint that just tries to give it a target velocity? Should we just assign to the velocity?
- Slow the car down when you hit a rigid body
- Boost jets
	- Need to decide whether we should be using a constraint instead of applying impulses/accelerations. Like should it be a motor constraint?
- Improve car wheel helpers
	- Render them up to date
	- Make config setting
- [laptop] Clean up the -vet things
- Wireframe triangle geometry for mesh hull helpers.
- Hull bounds helpers - this is different than the hull helpers, it would show you the axis aligned bounding boxes of the hulls.
- Shader hot reloading?
- Versioning for font file
- If you push a box using your car. It scoots away orthogonally. Maybe the friction direction could be in the direction the thing is moving in?
- Boost meter. This will be fun, if you boost into someone, you'll really hit them. I want some places to be only reachable by boosting.
- OPERATION CREATING A FUN FUCKING TRACK
	- Landing upside down
	- Upper collision hull on the car
	- Boost jet
		- Car does not return to top speed fast enough
		- Not enough lateral friction
		- Hitting the wall feels bad
	- Car
		- Weight distribution multiplier for lateral movement.
		- Nose dive and pitch up work when against a wall?
		- Adjust going off a jump and landing slide threshold?
		- Pressing handbreak button in the air should start the timer once it hits the ground. If you don't hit the ground within a certain amount of time, ignore the button press?
	- AI so that we can actually have other players on the track and it feels fun
		- [done] Hull object avoidance
		- Triangle object avoidance?
		- Smoother accel/decel (it's just 1 or -1 right now)
		- Player vs player collisions
			- Should not see each other as obsticals if velocity is >=
- Mistakes we can catch / improvements that would help dev time
	- If the exporter finds a rigid body not part of a rigid body island, produce a warning. The rigid body will not be exported.
	- If the spawn point is not a bit above the ground mesh, produce a warning. The car will just fall through.
	- [BUG] You can export a rigid body without a collision hull.
- Immediate mode UI rendering.
- Immediate mode rendering for the helpers?
	- Would allow us to remove the .KeepRender shit I think?
	- Would really cleanup the AI helper rendering, there is state we must transition over the main thread so we can do the entity/geometry creation there.
- [laptop] AI framerate?
- [laptop] Reorganize the math2 + other util stuff into subfiles/packages or something?
- Save last get call from get_geometry, then check it in make_geometry...()?

- Sequential impulse solver positional corrections
	https://www.gamedev.net/forums/topic/714397-sequential-impulse-solver-bounce-without-restitution/5457082/
	We should be doing the positional correction by changing the positions and orientations of the bodies instead of the bias velocities. Apparently this is a better way to do it. It will probably make our simulation more stable
	and more correct. This is the way Box2D does it. At some point, I think we should try this new way out.

For a cool particle explosion effect do this:
	RANGE :: 5;

	particle.velocity.x += rand.float32_range(-RANGE, RANGE);
	particle.velocity.y += rand.float32_range(-RANGE, RANGE);
	particle.velocity.z += rand.float32_range(-RANGE, RANGE);
	particle.position += particle.velocity * dt;

Todo now
- [DONE] Box floating away collision issue
- Car vs car collisions
- Make some AI spawn points on the track
- car vs rigid body collisions - make them not suck